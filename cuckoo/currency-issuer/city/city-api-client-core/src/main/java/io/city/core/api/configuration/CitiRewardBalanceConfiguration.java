package io.city.core.api.configuration;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import io.city.core.api.auth.url.BuildRequestHeader;
import io.city.core.api.auth.url.HeaderProvider;
import io.city.core.api.client.reward.auth.CallAuthorization;

import org.springframework.stereotype.Component;


import org.springframework.stereotype.Service;

public class CitiRewardBalanceConfiguration {
	
	Map<String,String> configMap = new HashMap<>();
	InputStream inputStream;
	
	
	public Map<String,String> getPropValues() throws IOException {
 
		
		try {
			Properties prop = new Properties();
			String propFileName = "application.properties";
 
			/*
			 * The Java ClassLoader is a part of the Java Runtime Environment that dynamically loads Java classes into the Java Virtual Machine. 
			 * The Java run time system does not need to know about files and file systems because of classloaders.
			 */
			inputStream = getClass().getClassLoader().getResourceAsStream(propFileName);
 
			if (inputStream != null) {
				prop.load(inputStream);
			} else {
				throw new FileNotFoundException("property file '" + propFileName + "' not found in the classpath");
			}
			
 
			
			/*
			 * Putting all the properties in a map
			 */
			configMap.put("cityRewardUrl", prop.getProperty("city.reward.url"));
			configMap.put("vi", prop.getProperty("city.reward.url.v1"));
			configMap.put("apiProduct", prop.getProperty("city.reward.url.apiProduct"));
			configMap.put("endpoint", prop.getProperty("city.reward.url.endpoint"));
			configMap.put("eligibilityEndpoint", prop.getProperty("city.eligibility.url.endpoint"));
			configMap.put("enablementEndpoint", prop.getProperty("city.enablement.url.endpoint"));
			configMap.put("cloakedCreditCardNumbers", prop.getProperty("city.reward.qp.cloakedCreditCardNumber"));
			configMap.put("merchantCode", prop.getProperty("city.reward.qp.merchantCode"));
			configMap.put("rewardProgram", prop.getProperty("city.reward.qp.rewardProgram"));
			configMap.put("rewardLinkCode", prop.getProperty("city.reward.qp.rewardLinkCode"));
			
			configMap.put("cityRewardEligibilityPath", prop.getProperty("city.reward.eligibility.path"));
			
			configMap.put("clientId", prop.getProperty("client.id"));
			configMap.put("clientSecret", prop.getProperty("client.secret"));
			configMap.put("uuid", prop.getProperty("uuid"));// create rendom
			configMap.put("contentType",  prop.getProperty("content.type"));
			configMap.put("countryCode", prop.getProperty("countrycode"));
			configMap.put("businessCode", prop.getProperty("businesscode"));
			configMap.put("authorization", prop.getProperty("authorization"));// generated by the "/clientCredentials/oauth2/token/us/gcb" --https://sandbox.developerhub.citi.com/api/united-states/retail-bank/identity-security/authorize/documentation
			configMap.put("acceptLanguage", prop.getProperty("accept.language"));
			configMap.put("accept", prop.getProperty("accept"));
			
			//Authrirization Properties.
			configMap.put("authAuthorization", prop.getProperty("auth.authorization"));
			configMap.put("authContentType", prop.getProperty("auth.content-type"));
			configMap.put("authUrl", prop.getProperty("auth.url"));
			configMap.put("authMediaType", prop.getProperty("auth.media.type"));
			configMap.put("authScope", prop.getProperty("auth.scope"));
			
 
		} catch (Exception e) {
			System.out.println("Exception: " + e);
		} finally {
			inputStream.close();
		}
		return configMap;
	}

}
